# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-09-15 07:08
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AwsCredits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(max_length=55)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('customer', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('P', 'Primary'), ('D/O', 'Director/Owner'), ('A&O', 'A/c Person & Operation Executive'), ('S', 'Sales Person'), ('O', 'Others')], max_length=5)),
                ('name', models.CharField(max_length=55)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('mobile', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Bank statement', 'Last 3 months bank statement'), ('Audits', 'Latest Audit Accounts with Income Tax return acknowledgement copy'), ('CST & LST', 'CST & LST Registration proof'), ('Memorandum & Articles', 'Memorandum & Articles of Association/Partnership Agreements'), ('Passport', 'Copy of Passport of Properitor/Partner/Directors'), ('Pan card', 'Company Pan Card'), ('Service tax', 'Service tax Certificate')], max_length=35)),
                ('file_name', models.CharField(max_length=75)),
                ('file_data', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalAwsCredits',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('coupon_code', models.CharField(max_length=55)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('customer', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical aws credits',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalContactDetails',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type', models.CharField(choices=[('P', 'Primary'), ('D/O', 'Director/Owner'), ('A&O', 'A/c Person & Operation Executive'), ('S', 'Sales Person'), ('O', 'Others')], max_length=5)),
                ('name', models.CharField(max_length=55)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('mobile', models.CharField(max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical contact details',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalPartner',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('customer', models.BooleanField(default=False)),
                ('partner', models.IntegerField(default=None, null=True)),
                ('company_name', models.CharField(max_length=75)),
                ('status', models.BooleanField()),
                ('existing_status', models.BooleanField()),
                ('jba_code', models.CharField(max_length=35, null=True)),
                ('gst_number', models.CharField(default=None, max_length=25, null=True)),
                ('credits', models.CharField(max_length=12)),
                ('vendor_list', models.CharField(max_length=75)),
                ('address_1', models.CharField(max_length=125)),
                ('address_2', models.CharField(max_length=125, null=True)),
                ('address_3', models.CharField(max_length=75, null=True)),
                ('city', models.CharField(max_length=35, null=True)),
                ('state', models.CharField(max_length=35, null=True)),
                ('pin_code', models.CharField(max_length=12, null=True)),
                ('partner_type', models.CharField(choices=[('R', 'Reseller'), ('C&I', 'Consulting & Implementation'), ('MSP', 'Managed Service Provider'), ('TP', 'Technology Partner')], max_length=25)),
                ('business_type', models.CharField(choices=[('H/W', 'Hardware'), ('S/W', 'Software'), ('S', 'Services'), ('AD', 'App Development'), ('Sec', 'Security'), ('C', 'Cloud')], max_length=35)),
                ('focused_customer', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('interested_workload', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('created_at', models.DateField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('activated_at', models.DateField(blank=True, editable=False, null=True)),
                ('mpn_id', models.CharField(max_length=20, null=True)),
                ('apn_id', models.CharField(max_length=20, null=True)),
                ('apn_id_active', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical partner',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='InitialContactDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('P', 'Primary'), ('D/O', 'Director/Owner'), ('A&O', 'A/c Person & Operation Executive'), ('S', 'Sales Person'), ('O', 'Others')], max_length=5)),
                ('name', models.CharField(max_length=55, null=True)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('mobile', models.CharField(max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InitialDocumentDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Bank statement', 'Last 3 months bank statement'), ('Audits', 'Latest Audit Accounts with Income Tax return acknowledgement copy'), ('CST & LST', 'CST & LST Registration proof'), ('Memorandum & Articles', 'Memorandum & Articles of Association/Partnership Agreements'), ('Passport', 'Copy of Passport of Properitor/Partner/Directors'), ('Pan card', 'Company Pan Card'), ('Service tax', 'Service tax Certificate')], max_length=35)),
                ('file_name', models.CharField(max_length=75)),
                ('file_data', models.FileField(blank=True, null=True, upload_to='documents/%Y-%m-%d:%H-%M-%S')),
            ],
        ),
        migrations.CreateModel(
            name='InitialPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32)),
                ('customer', models.BooleanField(default=False)),
                ('registration_status', models.IntegerField(null=True)),
                ('preferred_user_name', models.CharField(max_length=75)),
                ('gst_number', models.CharField(default=None, max_length=25, null=True)),
                ('company_name', models.CharField(max_length=75, null=True)),
                ('status', models.BooleanField()),
                ('existing_status', models.BooleanField()),
                ('jba_code', models.CharField(max_length=35, null=True)),
                ('credits', models.CharField(max_length=12, null=True)),
                ('vendor_list', models.CharField(max_length=75, null=True)),
                ('address_1', models.CharField(max_length=125, null=True)),
                ('address_2', models.CharField(max_length=125, null=True)),
                ('address_3', models.CharField(max_length=75, null=True)),
                ('city', models.CharField(max_length=35, null=True)),
                ('state', models.CharField(max_length=35, null=True)),
                ('pin_code', models.CharField(max_length=12, null=True)),
                ('partner_type', models.CharField(choices=[('R', 'Reseller'), ('C&I', 'Consulting & Implementation'), ('MSP', 'Managed Service Provider'), ('TP', 'Technology Partner')], max_length=25)),
                ('business_type', models.CharField(choices=[('H/W', 'Hardware'), ('S/W', 'Software'), ('S', 'Services'), ('AD', 'App Development'), ('Sec', 'Security'), ('C', 'Cloud')], max_length=35)),
                ('focused_customer', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('interested_workload', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('activated_at', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.BooleanField(default=False)),
                ('partner', models.IntegerField(default=None, null=True)),
                ('company_name', models.CharField(max_length=75)),
                ('status', models.BooleanField()),
                ('existing_status', models.BooleanField()),
                ('jba_code', models.CharField(max_length=35, null=True)),
                ('gst_number', models.CharField(default=None, max_length=25, null=True)),
                ('credits', models.CharField(max_length=12)),
                ('vendor_list', models.CharField(max_length=75)),
                ('address_1', models.CharField(max_length=125)),
                ('address_2', models.CharField(max_length=125, null=True)),
                ('address_3', models.CharField(max_length=75, null=True)),
                ('city', models.CharField(max_length=35, null=True)),
                ('state', models.CharField(max_length=35, null=True)),
                ('pin_code', models.CharField(max_length=12, null=True)),
                ('partner_type', models.CharField(choices=[('R', 'Reseller'), ('C&I', 'Consulting & Implementation'), ('MSP', 'Managed Service Provider'), ('TP', 'Technology Partner')], max_length=25)),
                ('business_type', models.CharField(choices=[('H/W', 'Hardware'), ('S/W', 'Software'), ('S', 'Services'), ('AD', 'App Development'), ('Sec', 'Security'), ('C', 'Cloud')], max_length=35)),
                ('focused_customer', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('interested_workload', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('activated_at', models.DateField(auto_now_add=True, null=True)),
                ('mpn_id', models.CharField(max_length=20, null=True)),
                ('apn_id', models.CharField(max_length=20, null=True)),
                ('apn_id_active', models.BooleanField(default=False)),
            ],
            options={
                'permissions': (('change_mpnid', 'Can change MPN ID'), ('change_apnid', 'Can change APN ID')),
            },
        ),
        migrations.CreateModel(
            name='PartnerRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(max_length=10)),
                ('feedback', models.TextField()),
                ('created_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerRejections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejection_reason', models.TextField(null=True)),
                ('rejected_at', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerUserDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='partner.Partner')),
            ],
        ),
    ]
